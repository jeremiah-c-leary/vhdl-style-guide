--------------------------------------------------------------------------------
0 |
--------------------------------------------------------------------------------
1 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
2 | architecture RTL of FIFO is
<class 'vsg.token.architecture_body.architecture_keyword'>
<class 'vsg.token.architecture_body.identifier'>
<class 'vsg.token.architecture_body.of_keyword'>
<class 'vsg.token.architecture_body.entity_name'>
<class 'vsg.token.architecture_body.is_keyword'>
--------------------------------------------------------------------------------
3 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
4 |   type memory is array (natural range<>) of std_logic_vector(3 downto 0);
<class 'vsg.token.full_type_declaration.type_keyword'>
<class 'vsg.token.full_type_declaration.identifier'>
<class 'vsg.token.full_type_declaration.is_keyword'>
<class 'vsg.token.unbounded_array_definition.array_keyword'>
<class 'vsg.token.unbounded_array_definition.open_parenthesis'>
<class 'vsg.token.ieee.std_logic_1164.types.natural'>
<class 'vsg.token.index_subtype_definition.range_keyword'>
<class 'vsg.token.index_subtype_definition.undefined_range'>
<class 'vsg.token.unbounded_array_definition.close_parenthesis'>
<class 'vsg.token.unbounded_array_definition.of_keyword'>
<class 'vsg.token.ieee.std_logic_1164.types.std_logic_vector'>
<class 'vsg.token.index_constraint.open_parenthesis'>
<class 'vsg.parser.todo'>
<class 'vsg.token.direction.downto'>
<class 'vsg.parser.todo'>
<class 'vsg.token.index_constraint.close_parenthesis'>
<class 'vsg.token.full_type_declaration.semicolon'>
--------------------------------------------------------------------------------
5 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
6 |   type memory is array (natural range<>, natural range <>) of std_logic_vector(3 downto 0);
<class 'vsg.token.full_type_declaration.type_keyword'>
<class 'vsg.token.full_type_declaration.identifier'>
<class 'vsg.token.full_type_declaration.is_keyword'>
<class 'vsg.token.unbounded_array_definition.array_keyword'>
<class 'vsg.token.unbounded_array_definition.open_parenthesis'>
<class 'vsg.token.ieee.std_logic_1164.types.natural'>
<class 'vsg.token.index_subtype_definition.range_keyword'>
<class 'vsg.token.index_subtype_definition.undefined_range'>
<class 'vsg.token.unbounded_array_definition.comma'>
<class 'vsg.token.ieee.std_logic_1164.types.natural'>
<class 'vsg.token.index_subtype_definition.range_keyword'>
<class 'vsg.token.index_subtype_definition.undefined_range'>
<class 'vsg.token.unbounded_array_definition.close_parenthesis'>
<class 'vsg.token.unbounded_array_definition.of_keyword'>
<class 'vsg.token.ieee.std_logic_1164.types.std_logic_vector'>
<class 'vsg.token.index_constraint.open_parenthesis'>
<class 'vsg.parser.todo'>
<class 'vsg.token.direction.downto'>
<class 'vsg.parser.todo'>
<class 'vsg.token.index_constraint.close_parenthesis'>
<class 'vsg.token.full_type_declaration.semicolon'>
--------------------------------------------------------------------------------
7 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
8 | begin
<class 'vsg.token.architecture_body.begin_keyword'>
--------------------------------------------------------------------------------
9 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
10 | end architecture RTL;
<class 'vsg.token.architecture_body.end_keyword'>
<class 'vsg.token.architecture_body.end_architecture_keyword'>
<class 'vsg.token.architecture_body.architecture_simple_name'>
<class 'vsg.token.architecture_body.semicolon'>
