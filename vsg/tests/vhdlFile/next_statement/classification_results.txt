--------------------------------------------------------------------------------
0 |
--------------------------------------------------------------------------------
1 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
2 | architecture RTL of ENTITY_NAME is
<class 'vsg.token.architecture_body.architecture_keyword'>
<class 'vsg.token.architecture_body.identifier'>
<class 'vsg.token.architecture_body.of_keyword'>
<class 'vsg.token.architecture_body.entity_name'>
<class 'vsg.token.architecture_body.is_keyword'>
--------------------------------------------------------------------------------
3 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
4 | begin
<class 'vsg.token.architecture_body.begin_keyword'>
--------------------------------------------------------------------------------
5 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
6 |   process
<class 'vsg.token.process_statement.process_keyword'>
--------------------------------------------------------------------------------
7 |   begin
<class 'vsg.token.process_statement.begin_keyword'>
--------------------------------------------------------------------------------
8 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
9 |     NEXT_LABEL : next loop_label when a(23 downto 5) = 20;
<class 'vsg.token.next_statement.label'>
<class 'vsg.token.next_statement.label_colon'>
<class 'vsg.token.next_statement.next_keyword'>
<class 'vsg.token.next_statement.loop_label'>
<class 'vsg.token.next_statement.when_keyword'>
<class 'vsg.token.todo.name'>
<class 'vsg.token.todo.open_parenthesis'>
<class 'vsg.parser.todo'>
<class 'vsg.token.direction.downto'>
<class 'vsg.parser.todo'>
<class 'vsg.token.todo.close_parenthesis'>
<class 'vsg.token.relational_operator.equal'>
<class 'vsg.parser.todo'>
<class 'vsg.token.next_statement.semicolon'>
--------------------------------------------------------------------------------
10 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
11 |     next loop_label when a(23 downto 5) = 20;
<class 'vsg.token.next_statement.next_keyword'>
<class 'vsg.token.next_statement.loop_label'>
<class 'vsg.token.next_statement.when_keyword'>
<class 'vsg.token.todo.name'>
<class 'vsg.token.todo.open_parenthesis'>
<class 'vsg.parser.todo'>
<class 'vsg.token.direction.downto'>
<class 'vsg.parser.todo'>
<class 'vsg.token.todo.close_parenthesis'>
<class 'vsg.token.relational_operator.equal'>
<class 'vsg.parser.todo'>
<class 'vsg.token.next_statement.semicolon'>
--------------------------------------------------------------------------------
12 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
13 |     NEXT_LABEL : next when a(23 downto 5) = 20;
<class 'vsg.token.next_statement.label'>
<class 'vsg.token.next_statement.label_colon'>
<class 'vsg.token.next_statement.next_keyword'>
<class 'vsg.token.next_statement.when_keyword'>
<class 'vsg.token.todo.name'>
<class 'vsg.token.todo.open_parenthesis'>
<class 'vsg.parser.todo'>
<class 'vsg.token.direction.downto'>
<class 'vsg.parser.todo'>
<class 'vsg.token.todo.close_parenthesis'>
<class 'vsg.token.relational_operator.equal'>
<class 'vsg.parser.todo'>
<class 'vsg.token.next_statement.semicolon'>
--------------------------------------------------------------------------------
14 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
15 |     next when a(23 downto 5) = 20;
<class 'vsg.token.next_statement.next_keyword'>
<class 'vsg.token.next_statement.when_keyword'>
<class 'vsg.token.todo.name'>
<class 'vsg.token.todo.open_parenthesis'>
<class 'vsg.parser.todo'>
<class 'vsg.token.direction.downto'>
<class 'vsg.parser.todo'>
<class 'vsg.token.todo.close_parenthesis'>
<class 'vsg.token.relational_operator.equal'>
<class 'vsg.parser.todo'>
<class 'vsg.token.next_statement.semicolon'>
--------------------------------------------------------------------------------
16 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
17 |     NEXT_LABEL : next loop_label;
<class 'vsg.token.next_statement.label'>
<class 'vsg.token.next_statement.label_colon'>
<class 'vsg.token.next_statement.next_keyword'>
<class 'vsg.token.next_statement.loop_label'>
<class 'vsg.token.next_statement.semicolon'>
--------------------------------------------------------------------------------
18 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
19 |     next loop_label;
<class 'vsg.token.next_statement.next_keyword'>
<class 'vsg.token.next_statement.loop_label'>
<class 'vsg.token.next_statement.semicolon'>
--------------------------------------------------------------------------------
20 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
21 |     next;
<class 'vsg.token.next_statement.next_keyword'>
<class 'vsg.token.next_statement.semicolon'>
--------------------------------------------------------------------------------
22 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
23 |   end process;
<class 'vsg.token.process_statement.end_keyword'>
<class 'vsg.token.process_statement.end_process_keyword'>
<class 'vsg.token.process_statement.semicolon'>
--------------------------------------------------------------------------------
24 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
25 | end architecture RTL;
<class 'vsg.token.architecture_body.end_keyword'>
<class 'vsg.token.architecture_body.end_architecture_keyword'>
<class 'vsg.token.architecture_body.architecture_simple_name'>
<class 'vsg.token.architecture_body.semicolon'>
