--------------------------------------------------------------------------------
0 |
--------------------------------------------------------------------------------
1 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
2 | architecture RTL of ENTITY_NAME is
<class 'vsg.token.architecture_body.architecture_keyword'>
<class 'vsg.token.architecture_body.identifier'>
<class 'vsg.token.architecture_body.of_keyword'>
<class 'vsg.token.architecture_body.entity_name'>
<class 'vsg.token.architecture_body.is_keyword'>
--------------------------------------------------------------------------------
3 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
4 |   type T_FLAG_TYPE is protected body       -- protected type declaration
<class 'vsg.token.full_type_declaration.type_keyword'>
<class 'vsg.token.full_type_declaration.identifier'>
<class 'vsg.token.full_type_declaration.is_keyword'>
<class 'vsg.token.protected_type_body.protected_keyword'>
<class 'vsg.token.protected_type_body.body_keyword'>
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
5 |    procedure init (foo : real);
<class 'vsg.token.procedure_specification.procedure_keyword'>
<class 'vsg.token.procedure_specification.designator'>
<class 'vsg.token.procedure_specification.open_parenthesis'>
<class 'vsg.token.interface_unknown_declaration.identifier'>
<class 'vsg.token.interface_unknown_declaration.colon'>
<class 'vsg.token.subtype_indication.type_mark'>
<class 'vsg.token.procedure_specification.close_parenthesis'>
<class 'vsg.token.subprogram_declaration.semicolon'>
--------------------------------------------------------------------------------
6 |    impure function myfunct return boolean;
<class 'vsg.token.function_specification.impure_keyword'>
<class 'vsg.token.function_specification.function_keyword'>
<class 'vsg.token.function_specification.designator'>
<class 'vsg.token.function_specification.return_keyword'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.subprogram_declaration.semicolon'>
--------------------------------------------------------------------------------
7 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
8 |    constant c_con1 : std_logic;
<class 'vsg.token.constant_declaration.constant_keyword'>
<class 'vsg.token.constant_declaration.identifier'>
<class 'vsg.token.constant_declaration.colon'>
<class 'vsg.token.ieee.std_logic_1164.types.std_logic'>
<class 'vsg.token.constant_declaration.semicolon'>
--------------------------------------------------------------------------------
9 |    variable v_var1 : integer;
<class 'vsg.token.variable_declaration.variable_keyword'>
<class 'vsg.token.variable_declaration.identifier'>
<class 'vsg.token.variable_declaration.colon'>
<class 'vsg.token.ieee.std_logic_1164.types.integer'>
<class 'vsg.token.variable_declaration.semicolon'>
--------------------------------------------------------------------------------
10 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
11 |   end protected body T_FLAG_TYPE;
<class 'vsg.token.protected_type_body.end_keyword'>
<class 'vsg.token.protected_type_body.end_protected_keyword'>
<class 'vsg.token.protected_type_body.end_body_keyword'>
<class 'vsg.token.protected_type_body.protected_type_simple_name'>
<class 'vsg.token.full_type_declaration.semicolon'>
--------------------------------------------------------------------------------
12 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
13 | begin
<class 'vsg.token.architecture_body.begin_keyword'>
--------------------------------------------------------------------------------
14 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
15 | end architecture RTL;
<class 'vsg.token.architecture_body.end_keyword'>
<class 'vsg.token.architecture_body.end_architecture_keyword'>
<class 'vsg.token.architecture_body.architecture_simple_name'>
<class 'vsg.token.architecture_body.semicolon'>
