--------------------------------------------------------------------------------
0 |
--------------------------------------------------------------------------------
1 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
2 | entity BLOCK_EXAMPLE is
<class 'vsg.token.entity_declaration.entity_keyword'>
<class 'vsg.token.entity_declaration.identifier'>
<class 'vsg.token.entity_declaration.is_keyword'>
--------------------------------------------------------------------------------
3 | end entity BLOCK_EXAMPLE;
<class 'vsg.token.entity_declaration.end_keyword'>
<class 'vsg.token.entity_declaration.end_entity_keyword'>
<class 'vsg.token.entity_declaration.entity_simple_name'>
<class 'vsg.token.entity_declaration.semicolon'>
--------------------------------------------------------------------------------
4 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
5 | architecture RTL of BLOCK_EXAMPLE is
<class 'vsg.token.architecture_body.architecture_keyword'>
<class 'vsg.token.architecture_body.identifier'>
<class 'vsg.token.architecture_body.of_keyword'>
<class 'vsg.token.architecture_body.entity_name'>
<class 'vsg.token.architecture_body.is_keyword'>
--------------------------------------------------------------------------------
6 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
7 | begin
<class 'vsg.token.architecture_body.begin_keyword'>
--------------------------------------------------------------------------------
8 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
9 |   BLK : block is
<class 'vsg.token.block_statement.block_label'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.block_keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
10 |   begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
11 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
12 |     LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
13 |       report "This is a string"
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
14 |       severity WARNING;
<class 'vsg.token.assertion.severity_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
15 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
16 |     -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
17 |     a <= b;
<class 'vsg.token.concurrent_simple_signal_assignment.target'>
<class 'vsg.token.concurrent_simple_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_simple_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
18 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
19 |     GEN : for ii in 0 to 7 generate
<class 'vsg.token.for_generate_statement.generate_label'>
<class 'vsg.token.for_generate_statement.label_colon'>
<class 'vsg.token.for_generate_statement.for_keyword'>
<class 'vsg.token.parameter_specification.identifier'>
<class 'vsg.token.parameter_specification.in_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.direction.to'>
<class 'vsg.parser.todo'>
<class 'vsg.token.for_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
20 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
21 |       -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
22 |       a <= b when 'a' else
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
23 |            c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
24 |            d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
25 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
26 |       LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
27 |         report "This is a string"
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
28 |         severity WARNING;
<class 'vsg.token.assertion.severity_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
29 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
30 |       BLK2 : block is
<class 'vsg.token.block_statement.block_label'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.block_keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
31 |       begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
32 |         assert TRUE
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
33 |           report "This is a string"
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
34 |           severity WARNING;
<class 'vsg.token.assertion.severity_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
35 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
36 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
37 |         -- Basic version
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
38 |         with sel select
<class 'vsg.token.concurrent_selected_signal_assignment.with_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_selected_signal_assignment.select_keyword'>
--------------------------------------------------------------------------------
39 |           out1 <= a when "00",
<class 'vsg.token.concurrent_selected_signal_assignment.target'>
<class 'vsg.token.concurrent_selected_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
40 |                   b when "01",
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
41 |                   c when "10",
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
42 |                   d when others;
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.token.choice.others_keyword'>
<class 'vsg.token.concurrent_selected_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
43 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
44 |         GEN2 : for jj in 0 to 7 generate
<class 'vsg.token.for_generate_statement.generate_label'>
<class 'vsg.token.for_generate_statement.label_colon'>
<class 'vsg.token.for_generate_statement.for_keyword'>
<class 'vsg.token.parameter_specification.identifier'>
<class 'vsg.token.parameter_specification.in_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.direction.to'>
<class 'vsg.parser.todo'>
<class 'vsg.token.for_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
45 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
46 |           -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
47 |           simple_label : a <= b;
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_simple_signal_assignment.target'>
<class 'vsg.token.concurrent_simple_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_simple_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
48 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
49 |           assert TRUE
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
50 |             report "This is a string"
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
51 |             severity WARNING;
<class 'vsg.token.assertion.severity_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
52 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
53 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
54 |         end generate GEN2;
<class 'vsg.token.for_generate_statement.end_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_label'>
<class 'vsg.token.for_generate_statement.semicolon'>
--------------------------------------------------------------------------------
55 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
56 |       end block BLK2;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
57 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
58 |     end generate GEN;
<class 'vsg.token.for_generate_statement.end_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_label'>
<class 'vsg.token.for_generate_statement.semicolon'>
--------------------------------------------------------------------------------
59 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
60 |   end block BLK;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
61 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
62 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
63 |   BLK : block is
<class 'vsg.token.block_statement.block_label'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.block_keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
64 |   begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
65 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
66 |     -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
67 |     conditional_label : a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
68 |          c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
69 |          d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
70 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
71 |     IF_GEN_LABEL: if a = x generate
<class 'vsg.token.if_generate_statement.generate_label'>
<class 'vsg.token.if_generate_statement.label_colon'>
<class 'vsg.token.if_generate_statement.if_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.relational_operator.equal'>
<class 'vsg.parser.todo'>
<class 'vsg.token.if_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
72 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
73 |         -- Basic version
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
74 |         select_label : with sel select
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_selected_signal_assignment.with_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_selected_signal_assignment.select_keyword'>
--------------------------------------------------------------------------------
75 |           out1 <= a when "00",
<class 'vsg.token.concurrent_selected_signal_assignment.target'>
<class 'vsg.token.concurrent_selected_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
76 |                   b when "01",
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
77 |                   c when "10",
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
78 |                   d when others;
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.token.choice.others_keyword'>
<class 'vsg.token.concurrent_selected_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
79 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
80 |         BLK2 : block is
<class 'vsg.token.block_statement.block_label'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.block_keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
81 |         begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
82 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
83 |             LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
84 |               report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
85 |             -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
86 |             simple_label : postponed a <= b;
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_simple_signal_assignment.target'>
<class 'vsg.token.concurrent_simple_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_simple_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
87 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
88 |             GEN2 : for jj in 0 to 7 generate
<class 'vsg.token.for_generate_statement.generate_label'>
<class 'vsg.token.for_generate_statement.label_colon'>
<class 'vsg.token.for_generate_statement.for_keyword'>
<class 'vsg.token.parameter_specification.identifier'>
<class 'vsg.token.parameter_specification.in_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.direction.to'>
<class 'vsg.parser.todo'>
<class 'vsg.token.for_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
89 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
90 |                 -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
91 |                 conditional_label : postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
92 |                      c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
93 |                      d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
94 |                 LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
95 |                   report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
96 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
97 |                 BLK3: block is
<class 'vsg.token.block_statement.block_label'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.block_keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
98 |                 begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
99 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
100 |                   LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
101 |                     report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
102 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
103 |                 end block BLK3;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
104 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
105 |             end generate GEN2;
<class 'vsg.token.for_generate_statement.end_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_label'>
<class 'vsg.token.for_generate_statement.semicolon'>
--------------------------------------------------------------------------------
106 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
107 |             BLK4 : block is
<class 'vsg.token.block_statement.block_label'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.block_keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
108 |             begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
109 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
110 |               CASE_GEN_LABEL : case a & B & c generate
<class 'vsg.token.case_generate_statement.generate_label'>
<class 'vsg.token.case_generate_statement.label_colon'>
<class 'vsg.token.case_generate_statement.case_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.adding_operator.concat'>
<class 'vsg.parser.todo'>
<class 'vsg.token.adding_operator.concat'>
<class 'vsg.parser.todo'>
<class 'vsg.token.case_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
111 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
112 |                 when "000" =>
<class 'vsg.token.case_generate_alternative.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.case_generate_alternative.assignment'>
--------------------------------------------------------------------------------
113 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
114 |                   LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
115 |                     report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
116 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
117 |                     -- Basic version
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
118 |                     select_label : postponed with sel select
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_selected_signal_assignment.with_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_selected_signal_assignment.select_keyword'>
--------------------------------------------------------------------------------
119 |                       out1 <= a when "00",
<class 'vsg.token.concurrent_selected_signal_assignment.target'>
<class 'vsg.token.concurrent_selected_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
120 |                               b when "01",
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
121 |                               c when "10",
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
122 |                               d when others;
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.token.choice.others_keyword'>
<class 'vsg.token.concurrent_selected_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
123 |                     BLK4A : block is
<class 'vsg.token.block_statement.block_label'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.block_keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
124 |                     begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
125 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
126 |                       LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
127 |                         report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
128 |                       -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
129 |                       postponed a <= b;
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_simple_signal_assignment.target'>
<class 'vsg.token.concurrent_simple_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_simple_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
130 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
131 |                     end block BLK4A;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
132 |                 when "001" =>
<class 'vsg.token.case_generate_alternative.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.case_generate_alternative.assignment'>
--------------------------------------------------------------------------------
133 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
134 |                   -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
135 |                   postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
136 |                        c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
137 |                        d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
138 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
139 |                   IF_GEN_LABELA: if a = y generate
<class 'vsg.token.if_generate_statement.generate_label'>
<class 'vsg.token.if_generate_statement.label_colon'>
<class 'vsg.token.if_generate_statement.if_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.relational_operator.equal'>
<class 'vsg.parser.todo'>
<class 'vsg.token.if_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
140 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
141 |                     LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
142 |                       severity WARNING;
<class 'vsg.token.assertion.severity_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
143 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
144 |                     -- Basic version
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
145 |                     postponed with sel select
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_selected_signal_assignment.with_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_selected_signal_assignment.select_keyword'>
--------------------------------------------------------------------------------
146 |                       out1 <= a when "00",
<class 'vsg.token.concurrent_selected_signal_assignment.target'>
<class 'vsg.token.concurrent_selected_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
147 |                               b when "01",
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
148 |                               c when "10",
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.comma'>
--------------------------------------------------------------------------------
149 |                               d when others;
<class 'vsg.parser.todo'>
<class 'vsg.token.selected_waveforms.when_keyword'>
<class 'vsg.token.choice.others_keyword'>
<class 'vsg.token.concurrent_selected_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
150 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
151 |                     BLK4B : block is
<class 'vsg.token.block_statement.block_label'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.block_keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
152 |                     begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
153 |                       LABEL : assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
154 |                         severity WARNING;
<class 'vsg.token.assertion.severity_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
155 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
156 |                       -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
157 |                       conditional_label : postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
158 |                            c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
159 |                            d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
160 |                     end block BLK4B;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
161 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
162 |                   end generate IF_GEN_LABELA;
<class 'vsg.token.if_generate_statement.end_keyword'>
<class 'vsg.token.if_generate_statement.end_generate_keyword'>
<class 'vsg.token.if_generate_statement.end_generate_label'>
<class 'vsg.token.if_generate_statement.semicolon'>
--------------------------------------------------------------------------------
163 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
164 |                end generate CASE_GEN_LABEL;
<class 'vsg.token.case_generate_statement.end_keyword'>
<class 'vsg.token.case_generate_statement.end_generate_keyword'>
<class 'vsg.token.case_generate_statement.end_generate_label'>
<class 'vsg.token.case_generate_statement.semicolon'>
--------------------------------------------------------------------------------
165 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
166 |             end block BLK4;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
167 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
168 |             BLK5 : block is
<class 'vsg.token.block_statement.block_label'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.block_keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
169 |             begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
170 |                 postponed assert TRUE
<class 'vsg.token.concurrent_assertion_statement.postponed_keyword'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
171 |                   report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
172 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
173 |                 -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
174 |                 conditional_label : postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
175 |                      c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
176 |                      d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
177 |             end block BLK5;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
178 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
179 |         end block BLK2;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
180 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
181 |     end generate IF_GEN_LABEL;
<class 'vsg.token.if_generate_statement.end_keyword'>
<class 'vsg.token.if_generate_statement.end_generate_keyword'>
<class 'vsg.token.if_generate_statement.end_generate_label'>
<class 'vsg.token.if_generate_statement.semicolon'>
--------------------------------------------------------------------------------
182 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
183 |     GEN : for ii in 0 to 7 generate
<class 'vsg.token.for_generate_statement.generate_label'>
<class 'vsg.token.for_generate_statement.label_colon'>
<class 'vsg.token.for_generate_statement.for_keyword'>
<class 'vsg.token.parameter_specification.identifier'>
<class 'vsg.token.parameter_specification.in_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.direction.to'>
<class 'vsg.parser.todo'>
<class 'vsg.token.for_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
184 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
185 |                 -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
186 |                 conditional_label : postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
187 |                      c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
188 |                      d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
189 |                 postponed assert TRUE
<class 'vsg.token.concurrent_assertion_statement.postponed_keyword'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
190 |                   report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
191 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
192 |         GEN2 : for jj in 0 to 7 generate
<class 'vsg.token.for_generate_statement.generate_label'>
<class 'vsg.token.for_generate_statement.label_colon'>
<class 'vsg.token.for_generate_statement.for_keyword'>
<class 'vsg.token.parameter_specification.identifier'>
<class 'vsg.token.parameter_specification.in_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.direction.to'>
<class 'vsg.parser.todo'>
<class 'vsg.token.for_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
193 |                 postponed assert TRUE
<class 'vsg.token.concurrent_assertion_statement.postponed_keyword'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
194 |                   report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
195 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
196 |                 -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
197 |                 conditional_label : postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
198 |                      c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
199 |                      d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
200 |           IF_GEN_LABEL2 : if b = y generate
<class 'vsg.token.if_generate_statement.generate_label'>
<class 'vsg.token.if_generate_statement.label_colon'>
<class 'vsg.token.if_generate_statement.if_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.relational_operator.equal'>
<class 'vsg.parser.todo'>
<class 'vsg.token.if_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
201 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
202 |                 -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
203 |                 conditional_label : postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
204 |                      c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
205 |                      d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
206 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
207 |             BLK2 : block is
<class 'vsg.token.block_statement.block_label'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.block_keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
208 |             begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
209 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
210 |                 LABEL : postponed assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.concurrent_assertion_statement.postponed_keyword'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
211 |                   report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
212 |                 -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
213 |                 conditional_label : postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
214 |                      c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
215 |                      d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
216 |             end block BLK2;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
217 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
218 |           elsif x = z generate
<class 'vsg.token.if_generate_statement.elsif_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.relational_operator.equal'>
<class 'vsg.parser.todo'>
<class 'vsg.token.if_generate_statement.generate_keyword'>
--------------------------------------------------------------------------------
219 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
220 |             BLK2 : block is
<class 'vsg.token.block_statement.block_label'>
<class 'vsg.token.block_statement.label_colon'>
<class 'vsg.token.block_statement.block_keyword'>
<class 'vsg.token.block_statement.is_keyword'>
--------------------------------------------------------------------------------
221 |             begin
<class 'vsg.token.block_statement.begin_keyword'>
--------------------------------------------------------------------------------
222 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
223 |                 -- Simple form
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
224 |                 conditional_label : postponed a <= b when 'a' else
<class 'vsg.token.concurrent_signal_assignment_statement.label_name'>
<class 'vsg.token.concurrent_signal_assignment_statement.label_colon'>
<class 'vsg.token.concurrent_signal_assignment_statement.postponed_keyword'>
<class 'vsg.token.concurrent_conditional_signal_assignment.target'>
<class 'vsg.token.concurrent_conditional_signal_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
225 |                      c when 'b' else
<class 'vsg.parser.todo'>
<class 'vsg.token.conditional_waveforms.when_keyword'>
<class 'vsg.parser.character_literal'>
<class 'vsg.token.conditional_waveforms.else_keyword'>
--------------------------------------------------------------------------------
226 |                      d;
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_conditional_signal_assignment.semicolon'>
--------------------------------------------------------------------------------
227 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
228 |                 LABEL : postponed assert TRUE
<class 'vsg.token.concurrent_assertion_statement.label_name'>
<class 'vsg.token.concurrent_assertion_statement.label_colon'>
<class 'vsg.token.concurrent_assertion_statement.postponed_keyword'>
<class 'vsg.token.assertion.keyword'>
<class 'vsg.parser.todo'>
--------------------------------------------------------------------------------
229 |                   report "This is a string";
<class 'vsg.token.assertion.report_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.concurrent_assertion_statement.semicolon'>
--------------------------------------------------------------------------------
230 |             end block BLK2;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
231 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
232 |         end generate IF_GEN_LABEL2;
<class 'vsg.token.if_generate_statement.end_keyword'>
<class 'vsg.token.if_generate_statement.end_generate_keyword'>
<class 'vsg.token.if_generate_statement.end_generate_label'>
<class 'vsg.token.if_generate_statement.semicolon'>
--------------------------------------------------------------------------------
233 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
234 |         end generate GEN2;
<class 'vsg.token.for_generate_statement.end_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_label'>
<class 'vsg.token.for_generate_statement.semicolon'>
--------------------------------------------------------------------------------
235 |     end generate GEN;
<class 'vsg.token.for_generate_statement.end_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_keyword'>
<class 'vsg.token.for_generate_statement.end_generate_label'>
<class 'vsg.token.for_generate_statement.semicolon'>
--------------------------------------------------------------------------------
236 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
237 |   end block BLK;
<class 'vsg.token.block_statement.end_keyword'>
<class 'vsg.token.block_statement.end_block_keyword'>
<class 'vsg.token.block_statement.end_block_label'>
<class 'vsg.token.block_statement.semicolon'>
--------------------------------------------------------------------------------
238 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
239 | end architecture RTL;
<class 'vsg.token.architecture_body.end_keyword'>
<class 'vsg.token.architecture_body.end_architecture_keyword'>
<class 'vsg.token.architecture_body.architecture_simple_name'>
<class 'vsg.token.architecture_body.semicolon'>
