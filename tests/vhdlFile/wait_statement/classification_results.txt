--------------------------------------------------------------------------------
0 |
--------------------------------------------------------------------------------
1 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
2 | architecture RTL of ENTITY_NAME is
<class 'vsg.token.architecture_body.architecture_keyword'>
<class 'vsg.token.architecture_body.identifier'>
<class 'vsg.token.architecture_body.of_keyword'>
<class 'vsg.token.architecture_body.entity_name'>
<class 'vsg.token.architecture_body.is_keyword'>
--------------------------------------------------------------------------------
3 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
4 | begin
<class 'vsg.token.architecture_body.begin_keyword'>
--------------------------------------------------------------------------------
5 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
6 |   process
<class 'vsg.token.process_statement.process_keyword'>
--------------------------------------------------------------------------------
7 |   begin
<class 'vsg.token.process_statement.begin_keyword'>
--------------------------------------------------------------------------------
8 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
9 |     -- Test all possible combinations
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
10 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
11 |     WAIT_LABEL : wait on sig1, sig2, sig3 until some condition met for some time_expression;
<class 'vsg.token.wait_statement.label'>
<class 'vsg.token.wait_statement.label_colon'>
<class 'vsg.token.wait_statement.wait_keyword'>
<class 'vsg.token.sensitivity_clause.on_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.condition_clause.until_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.timeout_clause.for_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.wait_statement.semicolon'>
--------------------------------------------------------------------------------
12 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
13 |     WAIT_LABEL : wait on sig1, sig2, sig3 until some condition met;
<class 'vsg.token.wait_statement.label'>
<class 'vsg.token.wait_statement.label_colon'>
<class 'vsg.token.wait_statement.wait_keyword'>
<class 'vsg.token.sensitivity_clause.on_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.condition_clause.until_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.wait_statement.semicolon'>
--------------------------------------------------------------------------------
14 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
15 |     WAIT_LABEL : wait on sig1, sig2, sig3 for some time_expression;
<class 'vsg.token.wait_statement.label'>
<class 'vsg.token.wait_statement.label_colon'>
<class 'vsg.token.wait_statement.wait_keyword'>
<class 'vsg.token.sensitivity_clause.on_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.timeout_clause.for_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.wait_statement.semicolon'>
--------------------------------------------------------------------------------
16 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
17 |     WAIT_LABEL : wait on sig1, sig2, sig3;
<class 'vsg.token.wait_statement.label'>
<class 'vsg.token.wait_statement.label_colon'>
<class 'vsg.token.wait_statement.wait_keyword'>
<class 'vsg.token.sensitivity_clause.on_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.wait_statement.semicolon'>
--------------------------------------------------------------------------------
18 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
19 |     WAIT_LABEL : wait until some condition met for some time_expression;
<class 'vsg.token.wait_statement.label'>
<class 'vsg.token.wait_statement.label_colon'>
<class 'vsg.token.wait_statement.wait_keyword'>
<class 'vsg.token.condition_clause.until_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.timeout_clause.for_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.wait_statement.semicolon'>
--------------------------------------------------------------------------------
20 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
21 |     WAIT_LABEL : wait until some condition met;
<class 'vsg.token.wait_statement.label'>
<class 'vsg.token.wait_statement.label_colon'>
<class 'vsg.token.wait_statement.wait_keyword'>
<class 'vsg.token.condition_clause.until_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.wait_statement.semicolon'>
--------------------------------------------------------------------------------
22 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
23 |     WAIT_LABEL : wait for some time_expression;
<class 'vsg.token.wait_statement.label'>
<class 'vsg.token.wait_statement.label_colon'>
<class 'vsg.token.wait_statement.wait_keyword'>
<class 'vsg.token.timeout_clause.for_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.wait_statement.semicolon'>
--------------------------------------------------------------------------------
24 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
25 |     WAIT_LABEL : wait;
<class 'vsg.token.wait_statement.label'>
<class 'vsg.token.wait_statement.label_colon'>
<class 'vsg.token.wait_statement.wait_keyword'>
<class 'vsg.token.wait_statement.semicolon'>
--------------------------------------------------------------------------------
26 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
27 |     -- Test without a label
<class 'vsg.parser.comment'>
--------------------------------------------------------------------------------
28 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
29 |     wait on sig1, sig2, sig3 until some condition met for some time_expression;
<class 'vsg.token.wait_statement.wait_keyword'>
<class 'vsg.token.sensitivity_clause.on_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.condition_clause.until_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.timeout_clause.for_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.wait_statement.semicolon'>
--------------------------------------------------------------------------------
30 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
31 |     wait on sig1, sig2, sig3 until some condition met;
<class 'vsg.token.wait_statement.wait_keyword'>
<class 'vsg.token.sensitivity_clause.on_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.condition_clause.until_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.wait_statement.semicolon'>
--------------------------------------------------------------------------------
32 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
33 |     wait on sig1, sig2, sig3 for some time_expression;
<class 'vsg.token.wait_statement.wait_keyword'>
<class 'vsg.token.sensitivity_clause.on_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.timeout_clause.for_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.wait_statement.semicolon'>
--------------------------------------------------------------------------------
34 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
35 |     wait on sig1, sig2, sig3;
<class 'vsg.token.wait_statement.wait_keyword'>
<class 'vsg.token.sensitivity_clause.on_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.wait_statement.semicolon'>
--------------------------------------------------------------------------------
36 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
37 |     wait until some condition met for some time_expression;
<class 'vsg.token.wait_statement.wait_keyword'>
<class 'vsg.token.condition_clause.until_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.timeout_clause.for_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.wait_statement.semicolon'>
--------------------------------------------------------------------------------
38 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
39 |     wait until some condition met;
<class 'vsg.token.wait_statement.wait_keyword'>
<class 'vsg.token.condition_clause.until_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.wait_statement.semicolon'>
--------------------------------------------------------------------------------
40 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
41 |     wait for some time_expression;
<class 'vsg.token.wait_statement.wait_keyword'>
<class 'vsg.token.timeout_clause.for_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.parser.todo'>
<class 'vsg.token.wait_statement.semicolon'>
--------------------------------------------------------------------------------
42 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
43 |     wait;
<class 'vsg.token.wait_statement.wait_keyword'>
<class 'vsg.token.wait_statement.semicolon'>
--------------------------------------------------------------------------------
44 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
45 |   end process;
<class 'vsg.token.process_statement.end_keyword'>
<class 'vsg.token.process_statement.end_process_keyword'>
<class 'vsg.token.process_statement.semicolon'>
--------------------------------------------------------------------------------
46 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
47 | end architecture RTL;
<class 'vsg.token.architecture_body.end_keyword'>
<class 'vsg.token.architecture_body.end_architecture_keyword'>
<class 'vsg.token.architecture_body.architecture_simple_name'>
<class 'vsg.token.architecture_body.semicolon'>
