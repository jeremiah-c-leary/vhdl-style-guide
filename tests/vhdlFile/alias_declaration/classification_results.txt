--------------------------------------------------------------------------------
0 |
--------------------------------------------------------------------------------
1 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
2 | architecture RTL of FIFO is
<class 'vsg.token.architecture_body.architecture_keyword'>
<class 'vsg.token.architecture_body.identifier'>
<class 'vsg.token.architecture_body.of_keyword'>
<class 'vsg.token.architecture_body.entity_name'>
<class 'vsg.token.architecture_body.is_keyword'>
--------------------------------------------------------------------------------
3 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
4 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
5 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
6 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
7 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
8 |   alias ident : std_logic_vector(3 downto 0) is write_enable [name1, name2 return integer];
<class 'vsg.token.alias_declaration.alias_keyword'>
<class 'vsg.token.alias_declaration.alias_designator'>
<class 'vsg.token.alias_declaration.colon'>
<class 'vsg.token.ieee.std_logic_1164.types.std_logic_vector'>
<class 'vsg.token.index_constraint.open_parenthesis'>
<class 'vsg.parser.todo'>
<class 'vsg.token.direction.downto'>
<class 'vsg.parser.todo'>
<class 'vsg.token.index_constraint.close_parenthesis'>
<class 'vsg.token.alias_declaration.is_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.signature.open_bracket'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.comma'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.return_keyword'>
<class 'vsg.token.ieee.std_logic_1164.types.integer'>
<class 'vsg.token.signature.close_bracket'>
<class 'vsg.token.alias_declaration.semicolon'>
--------------------------------------------------------------------------------
9 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
10 |   alias ident : std_logic_vector(3 downto 0) is write_enable [name1, name2];
<class 'vsg.token.alias_declaration.alias_keyword'>
<class 'vsg.token.alias_declaration.alias_designator'>
<class 'vsg.token.alias_declaration.colon'>
<class 'vsg.token.ieee.std_logic_1164.types.std_logic_vector'>
<class 'vsg.token.index_constraint.open_parenthesis'>
<class 'vsg.parser.todo'>
<class 'vsg.token.direction.downto'>
<class 'vsg.parser.todo'>
<class 'vsg.token.index_constraint.close_parenthesis'>
<class 'vsg.token.alias_declaration.is_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.signature.open_bracket'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.comma'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.close_bracket'>
<class 'vsg.token.alias_declaration.semicolon'>
--------------------------------------------------------------------------------
11 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
12 |   alias ident : std_logic_vector(3 downto 0) is write_enable [return integer];
<class 'vsg.token.alias_declaration.alias_keyword'>
<class 'vsg.token.alias_declaration.alias_designator'>
<class 'vsg.token.alias_declaration.colon'>
<class 'vsg.token.ieee.std_logic_1164.types.std_logic_vector'>
<class 'vsg.token.index_constraint.open_parenthesis'>
<class 'vsg.parser.todo'>
<class 'vsg.token.direction.downto'>
<class 'vsg.parser.todo'>
<class 'vsg.token.index_constraint.close_parenthesis'>
<class 'vsg.token.alias_declaration.is_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.signature.open_bracket'>
<class 'vsg.token.signature.return_keyword'>
<class 'vsg.token.ieee.std_logic_1164.types.integer'>
<class 'vsg.token.signature.close_bracket'>
<class 'vsg.token.alias_declaration.semicolon'>
--------------------------------------------------------------------------------
13 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
14 |   alias ident : std_logic_vector(3 downto 0) is write_enable(15 downto 0);
<class 'vsg.token.alias_declaration.alias_keyword'>
<class 'vsg.token.alias_declaration.alias_designator'>
<class 'vsg.token.alias_declaration.colon'>
<class 'vsg.token.ieee.std_logic_1164.types.std_logic_vector'>
<class 'vsg.token.index_constraint.open_parenthesis'>
<class 'vsg.parser.todo'>
<class 'vsg.token.direction.downto'>
<class 'vsg.parser.todo'>
<class 'vsg.token.index_constraint.close_parenthesis'>
<class 'vsg.token.alias_declaration.is_keyword'>
<class 'vsg.token.todo.name'>
<class 'vsg.token.todo.open_parenthesis'>
<class 'vsg.parser.todo'>
<class 'vsg.token.direction.downto'>
<class 'vsg.parser.todo'>
<class 'vsg.token.todo.close_parenthesis'>
<class 'vsg.token.alias_declaration.semicolon'>
--------------------------------------------------------------------------------
15 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
16 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
17 |   alias ident is write_enable [name1, name2 return integer];
<class 'vsg.token.alias_declaration.alias_keyword'>
<class 'vsg.token.alias_declaration.alias_designator'>
<class 'vsg.token.alias_declaration.is_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.signature.open_bracket'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.comma'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.return_keyword'>
<class 'vsg.token.ieee.std_logic_1164.types.integer'>
<class 'vsg.token.signature.close_bracket'>
<class 'vsg.token.alias_declaration.semicolon'>
--------------------------------------------------------------------------------
18 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
19 |   alias ident is write_enable [name1, name2];
<class 'vsg.token.alias_declaration.alias_keyword'>
<class 'vsg.token.alias_declaration.alias_designator'>
<class 'vsg.token.alias_declaration.is_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.signature.open_bracket'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.comma'>
<class 'vsg.token.type_mark.name'>
<class 'vsg.token.signature.close_bracket'>
<class 'vsg.token.alias_declaration.semicolon'>
--------------------------------------------------------------------------------
20 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
21 |   alias ident is write_enable [return integer];
<class 'vsg.token.alias_declaration.alias_keyword'>
<class 'vsg.token.alias_declaration.alias_designator'>
<class 'vsg.token.alias_declaration.is_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.signature.open_bracket'>
<class 'vsg.token.signature.return_keyword'>
<class 'vsg.token.ieee.std_logic_1164.types.integer'>
<class 'vsg.token.signature.close_bracket'>
<class 'vsg.token.alias_declaration.semicolon'>
--------------------------------------------------------------------------------
22 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
23 |   alias ident is write_enable;
<class 'vsg.token.alias_declaration.alias_keyword'>
<class 'vsg.token.alias_declaration.alias_designator'>
<class 'vsg.token.alias_declaration.is_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.alias_declaration.semicolon'>
--------------------------------------------------------------------------------
24 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
25 | begin
<class 'vsg.token.architecture_body.begin_keyword'>
--------------------------------------------------------------------------------
26 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
27 | end architecture RTL;
<class 'vsg.token.architecture_body.end_keyword'>
<class 'vsg.token.architecture_body.end_architecture_keyword'>
<class 'vsg.token.architecture_body.architecture_simple_name'>
<class 'vsg.token.architecture_body.semicolon'>
