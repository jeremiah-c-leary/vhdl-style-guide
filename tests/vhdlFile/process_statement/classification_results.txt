--------------------------------------------------------------------------------
0 |
--------------------------------------------------------------------------------
1 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
2 | architecture RTL of FIFO is
<class 'vsg.token.architecture_body.architecture_keyword'>
<class 'vsg.token.architecture_body.identifier'>
<class 'vsg.token.architecture_body.of_keyword'>
<class 'vsg.token.architecture_body.entity_name'>
<class 'vsg.token.architecture_body.is_keyword'>
--------------------------------------------------------------------------------
3 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
4 | begin
<class 'vsg.token.architecture_body.begin_keyword'>
--------------------------------------------------------------------------------
5 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
6 |   process_and_or : process(a,b,d,e) is
<class 'vsg.token.process_statement.process_label'>
<class 'vsg.token.process_statement.label_colon'>
<class 'vsg.token.process_statement.process_keyword'>
<class 'vsg.token.process_statement.open_parenthesis'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.process_statement.close_parenthesis'>
<class 'vsg.token.process_statement.is_keyword'>
--------------------------------------------------------------------------------
7 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
8 |   begin
<class 'vsg.token.process_statement.begin_keyword'>
--------------------------------------------------------------------------------
9 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
10 |   end process process_and_or;
<class 'vsg.token.process_statement.end_keyword'>
<class 'vsg.token.process_statement.end_process_keyword'>
<class 'vsg.token.process_statement.end_process_label'>
<class 'vsg.token.process_statement.semicolon'>
--------------------------------------------------------------------------------
11 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
12 |   process_and_or : postponed process(a,b,d,e) is
<class 'vsg.token.process_statement.process_label'>
<class 'vsg.token.process_statement.label_colon'>
<class 'vsg.token.process_statement.postponed_keyword'>
<class 'vsg.token.process_statement.process_keyword'>
<class 'vsg.token.process_statement.open_parenthesis'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.sensitivity_list.comma'>
<class 'vsg.parser.todo'>
<class 'vsg.token.process_statement.close_parenthesis'>
<class 'vsg.token.process_statement.is_keyword'>
--------------------------------------------------------------------------------
13 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
14 |   begin
<class 'vsg.token.process_statement.begin_keyword'>
--------------------------------------------------------------------------------
15 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
16 |   end postponed process process_and_or;
<class 'vsg.token.process_statement.end_keyword'>
<class 'vsg.token.process_statement.end_postponed_keyword'>
<class 'vsg.token.process_statement.end_process_keyword'>
<class 'vsg.token.process_statement.end_process_label'>
<class 'vsg.token.process_statement.semicolon'>
--------------------------------------------------------------------------------
17 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
18 |   process_and_or : postponed process is
<class 'vsg.token.process_statement.process_label'>
<class 'vsg.token.process_statement.label_colon'>
<class 'vsg.token.process_statement.postponed_keyword'>
<class 'vsg.token.process_statement.process_keyword'>
<class 'vsg.token.process_statement.is_keyword'>
--------------------------------------------------------------------------------
19 |   begin
<class 'vsg.token.process_statement.begin_keyword'>
--------------------------------------------------------------------------------
20 |   end postponed process process_and_or;
<class 'vsg.token.process_statement.end_keyword'>
<class 'vsg.token.process_statement.end_postponed_keyword'>
<class 'vsg.token.process_statement.end_process_keyword'>
<class 'vsg.token.process_statement.end_process_label'>
<class 'vsg.token.process_statement.semicolon'>
--------------------------------------------------------------------------------
21 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
22 |   process_and_or : postponed process
<class 'vsg.token.process_statement.process_label'>
<class 'vsg.token.process_statement.label_colon'>
<class 'vsg.token.process_statement.postponed_keyword'>
<class 'vsg.token.process_statement.process_keyword'>
--------------------------------------------------------------------------------
23 |   begin
<class 'vsg.token.process_statement.begin_keyword'>
--------------------------------------------------------------------------------
24 |   end postponed process process_and_or;
<class 'vsg.token.process_statement.end_keyword'>
<class 'vsg.token.process_statement.end_postponed_keyword'>
<class 'vsg.token.process_statement.end_process_keyword'>
<class 'vsg.token.process_statement.end_process_label'>
<class 'vsg.token.process_statement.semicolon'>
--------------------------------------------------------------------------------
25 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
26 |   process_and_or : process
<class 'vsg.token.process_statement.process_label'>
<class 'vsg.token.process_statement.label_colon'>
<class 'vsg.token.process_statement.process_keyword'>
--------------------------------------------------------------------------------
27 |   begin
<class 'vsg.token.process_statement.begin_keyword'>
--------------------------------------------------------------------------------
28 |   end process process_and_or;
<class 'vsg.token.process_statement.end_keyword'>
<class 'vsg.token.process_statement.end_process_keyword'>
<class 'vsg.token.process_statement.end_process_label'>
<class 'vsg.token.process_statement.semicolon'>
--------------------------------------------------------------------------------
29 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
30 |   process
<class 'vsg.token.process_statement.process_keyword'>
--------------------------------------------------------------------------------
31 |   begin
<class 'vsg.token.process_statement.begin_keyword'>
--------------------------------------------------------------------------------
32 |   end process;
<class 'vsg.token.process_statement.end_keyword'>
<class 'vsg.token.process_statement.end_process_keyword'>
<class 'vsg.token.process_statement.semicolon'>
--------------------------------------------------------------------------------
33 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
34 |   process is
<class 'vsg.token.process_statement.process_keyword'>
<class 'vsg.token.process_statement.is_keyword'>
--------------------------------------------------------------------------------
35 |   begin
<class 'vsg.token.process_statement.begin_keyword'>
--------------------------------------------------------------------------------
36 |   end process;
<class 'vsg.token.process_statement.end_keyword'>
<class 'vsg.token.process_statement.end_process_keyword'>
<class 'vsg.token.process_statement.semicolon'>
--------------------------------------------------------------------------------
37 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
38 |   process (all) begin end process;
<class 'vsg.token.process_statement.process_keyword'>
<class 'vsg.token.process_statement.open_parenthesis'>
<class 'vsg.token.process_sensitivity_list.all_keyword'>
<class 'vsg.token.process_statement.close_parenthesis'>
<class 'vsg.token.process_statement.begin_keyword'>
<class 'vsg.token.process_statement.end_keyword'>
<class 'vsg.token.process_statement.end_process_keyword'>
<class 'vsg.token.process_statement.semicolon'>
--------------------------------------------------------------------------------
39 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
40 | end architecture RTL;
<class 'vsg.token.architecture_body.end_keyword'>
<class 'vsg.token.architecture_body.end_architecture_keyword'>
<class 'vsg.token.architecture_body.architecture_simple_name'>
<class 'vsg.token.architecture_body.semicolon'>
