--------------------------------------------------------------------------------
0 |
--------------------------------------------------------------------------------
1 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
2 | architecture RTL of FIFO is
<class 'vsg.token.architecture_body.architecture_keyword'>
<class 'vsg.token.architecture_body.identifier'>
<class 'vsg.token.architecture_body.of_keyword'>
<class 'vsg.token.architecture_body.entity_name'>
<class 'vsg.token.architecture_body.is_keyword'>
--------------------------------------------------------------------------------
3 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
4 | begin
<class 'vsg.token.architecture_body.begin_keyword'>
--------------------------------------------------------------------------------
5 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
6 |   Proc1 (Clock, A, Sig1, Sig2, Var1, Var2, Period);
<class 'vsg.token.procedure_call.procedure_name'>
<class 'vsg.token.procedure_call.open_parenthesis'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_list.comma'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_list.comma'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_list.comma'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_list.comma'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_list.comma'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_list.comma'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.procedure_call.close_parenthesis'>
<class 'vsg.token.concurrent_procedure_call_statement.semicolon'>
--------------------------------------------------------------------------------
7 |   READ (L => BufLine, VALUE => Q);
<class 'vsg.token.procedure_call.procedure_name'>
<class 'vsg.token.procedure_call.open_parenthesis'>
<class 'vsg.token.association_element.formal_part'>
<class 'vsg.token.association_element.assignment'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_list.comma'>
<class 'vsg.token.association_element.formal_part'>
<class 'vsg.token.association_element.assignment'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.procedure_call.close_parenthesis'>
<class 'vsg.token.concurrent_procedure_call_statement.semicolon'>
--------------------------------------------------------------------------------
8 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
9 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
10 |   LABEL1: Proc1 (Clock);
<class 'vsg.token.concurrent_procedure_call_statement.label_name'>
<class 'vsg.token.concurrent_procedure_call_statement.label_colon'>
<class 'vsg.token.procedure_call.procedure_name'>
<class 'vsg.token.procedure_call.open_parenthesis'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.procedure_call.close_parenthesis'>
<class 'vsg.token.concurrent_procedure_call_statement.semicolon'>
--------------------------------------------------------------------------------
11 |   LABEL2 : READ (L     => BufLine,
<class 'vsg.token.concurrent_procedure_call_statement.label_name'>
<class 'vsg.token.concurrent_procedure_call_statement.label_colon'>
<class 'vsg.token.procedure_call.procedure_name'>
<class 'vsg.token.procedure_call.open_parenthesis'>
<class 'vsg.token.association_element.formal_part'>
<class 'vsg.token.association_element.assignment'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_list.comma'>
--------------------------------------------------------------------------------
12 |                  VALUE => Q);
<class 'vsg.token.association_element.formal_part'>
<class 'vsg.token.association_element.assignment'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.procedure_call.close_parenthesis'>
<class 'vsg.token.concurrent_procedure_call_statement.semicolon'>
--------------------------------------------------------------------------------
13 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
14 |   LABEL1: postponed Proc1 (Clock);
<class 'vsg.token.concurrent_procedure_call_statement.label_name'>
<class 'vsg.token.concurrent_procedure_call_statement.label_colon'>
<class 'vsg.token.concurrent_procedure_call_statement.postponed_keyword'>
<class 'vsg.token.procedure_call.procedure_name'>
<class 'vsg.token.procedure_call.open_parenthesis'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.procedure_call.close_parenthesis'>
<class 'vsg.token.concurrent_procedure_call_statement.semicolon'>
--------------------------------------------------------------------------------
15 |   LABEL2 : postponed READ (L     => BufLine,
<class 'vsg.token.concurrent_procedure_call_statement.label_name'>
<class 'vsg.token.concurrent_procedure_call_statement.label_colon'>
<class 'vsg.token.concurrent_procedure_call_statement.postponed_keyword'>
<class 'vsg.token.procedure_call.procedure_name'>
<class 'vsg.token.procedure_call.open_parenthesis'>
<class 'vsg.token.association_element.formal_part'>
<class 'vsg.token.association_element.assignment'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_list.comma'>
--------------------------------------------------------------------------------
16 |                  VALUE => Q);
<class 'vsg.token.association_element.formal_part'>
<class 'vsg.token.association_element.assignment'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.procedure_call.close_parenthesis'>
<class 'vsg.token.concurrent_procedure_call_statement.semicolon'>
--------------------------------------------------------------------------------
17 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
18 |   postponed Proc1 (Clock);
<class 'vsg.token.concurrent_procedure_call_statement.postponed_keyword'>
<class 'vsg.token.procedure_call.procedure_name'>
<class 'vsg.token.procedure_call.open_parenthesis'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.procedure_call.close_parenthesis'>
<class 'vsg.token.concurrent_procedure_call_statement.semicolon'>
--------------------------------------------------------------------------------
19 |   postponed READ (L     => BufLine,
<class 'vsg.token.concurrent_procedure_call_statement.postponed_keyword'>
<class 'vsg.token.procedure_call.procedure_name'>
<class 'vsg.token.procedure_call.open_parenthesis'>
<class 'vsg.token.association_element.formal_part'>
<class 'vsg.token.association_element.assignment'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_list.comma'>
--------------------------------------------------------------------------------
20 |                  VALUE => Q);
<class 'vsg.token.association_element.formal_part'>
<class 'vsg.token.association_element.assignment'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.procedure_call.close_parenthesis'>
<class 'vsg.token.concurrent_procedure_call_statement.semicolon'>
--------------------------------------------------------------------------------
21 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
22 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
23 | end architecture RTL;
<class 'vsg.token.architecture_body.end_keyword'>
<class 'vsg.token.architecture_body.end_architecture_keyword'>
<class 'vsg.token.architecture_body.architecture_simple_name'>
<class 'vsg.token.architecture_body.semicolon'>
