--------------------------------------------------------------------------------
0 |
--------------------------------------------------------------------------------
1 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
2 | architecture RTL of ENTITY_NAME is
<class 'vsg.token.architecture_body.architecture_keyword'>
<class 'vsg.token.architecture_body.identifier'>
<class 'vsg.token.architecture_body.of_keyword'>
<class 'vsg.token.architecture_body.entity_name'>
<class 'vsg.token.architecture_body.is_keyword'>
--------------------------------------------------------------------------------
3 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
4 | begin
<class 'vsg.token.architecture_body.begin_keyword'>
--------------------------------------------------------------------------------
5 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
6 |   process
<class 'vsg.token.process_statement.process_keyword'>
--------------------------------------------------------------------------------
7 |   begin
<class 'vsg.token.process_statement.begin_keyword'>
--------------------------------------------------------------------------------
8 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
9 |     FORCE_LABEL : sig1 <= transport a and c;
<class 'vsg.token.signal_assignment_statement.label'>
<class 'vsg.token.signal_assignment_statement.label_colon'>
<class 'vsg.token.simple_waveform_assignment.target'>
<class 'vsg.token.simple_waveform_assignment.assignment'>
<class 'vsg.token.delay_mechanism.transport_keyword'>
<class 'vsg.parser.todo'>
<class 'vsg.token.logical_operator.and_operator'>
<class 'vsg.parser.todo'>
<class 'vsg.token.simple_waveform_assignment.semicolon'>
--------------------------------------------------------------------------------
10 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
11 |     FORCE_LABEL : sig1 <= a and c;
<class 'vsg.token.signal_assignment_statement.label'>
<class 'vsg.token.signal_assignment_statement.label_colon'>
<class 'vsg.token.simple_waveform_assignment.target'>
<class 'vsg.token.simple_waveform_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.logical_operator.and_operator'>
<class 'vsg.parser.todo'>
<class 'vsg.token.simple_waveform_assignment.semicolon'>
--------------------------------------------------------------------------------
12 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
13 |     sig1 <= a and c;
<class 'vsg.token.simple_waveform_assignment.target'>
<class 'vsg.token.simple_waveform_assignment.assignment'>
<class 'vsg.parser.todo'>
<class 'vsg.token.logical_operator.and_operator'>
<class 'vsg.parser.todo'>
<class 'vsg.token.simple_waveform_assignment.semicolon'>
--------------------------------------------------------------------------------
14 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
15 |     check_value(to_integer(unsigned(v_normalized_chan)) <= config.max_channel, TB_FAILURE, "Sanity check: Check that channel number is supported.", scope, ID_NEVER, msg_id_panel, proc_call);
<class 'vsg.token.procedure_call.procedure_name'>
<class 'vsg.token.procedure_call.open_parenthesis'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_list.comma'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_list.comma'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_list.comma'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_list.comma'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_list.comma'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.association_list.comma'>
<class 'vsg.token.association_element.actual_part'>
<class 'vsg.token.procedure_call.close_parenthesis'>
<class 'vsg.token.procedure_call_statement.semicolon'>
--------------------------------------------------------------------------------
16 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
17 |   end process;
<class 'vsg.token.process_statement.end_keyword'>
<class 'vsg.token.process_statement.end_process_keyword'>
<class 'vsg.token.process_statement.semicolon'>
--------------------------------------------------------------------------------
18 |
<class 'vsg.parser.blank_line'>
--------------------------------------------------------------------------------
19 | end architecture RTL;
<class 'vsg.token.architecture_body.end_keyword'>
<class 'vsg.token.architecture_body.end_architecture_keyword'>
<class 'vsg.token.architecture_body.architecture_simple_name'>
<class 'vsg.token.architecture_body.semicolon'>
